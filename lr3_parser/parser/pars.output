

Terminals which are not used:

   TRUE
   FALSE


Conflict in state 86 between rule 73 and token OR resolved as reduce.
Conflict in state 86 between rule 73 and token AND resolved as reduce.
Conflict in state 86 between rule 73 and token '=' resolved as reduce.
Conflict in state 86 between rule 73 and token NOT_EQUAL resolved as reduce.
Conflict in state 86 between rule 73 and token '>' resolved as reduce.
Conflict in state 86 between rule 73 and token '<' resolved as reduce.
Conflict in state 86 between rule 73 and token GREATER_EQUAL resolved as reduce.
Conflict in state 86 between rule 73 and token LESS_EQUAL resolved as reduce.
Conflict in state 86 between rule 73 and token '+' resolved as reduce.
Conflict in state 86 between rule 73 and token '-' resolved as reduce.
Conflict in state 86 between rule 73 and token '*' resolved as reduce.
Conflict in state 86 between rule 73 and token '/' resolved as reduce.
Conflict in state 86 between rule 73 and token POW resolved as reduce.
Conflict in state 86 between rule 73 and token '[' resolved as shift.
Conflict in state 93 between rule 70 and token OR resolved as reduce.
Conflict in state 93 between rule 70 and token AND resolved as reduce.
Conflict in state 93 between rule 70 and token '=' resolved as reduce.
Conflict in state 93 between rule 70 and token NOT_EQUAL resolved as reduce.
Conflict in state 93 between rule 70 and token '>' resolved as reduce.
Conflict in state 93 between rule 70 and token '<' resolved as reduce.
Conflict in state 93 between rule 70 and token GREATER_EQUAL resolved as reduce.
Conflict in state 93 between rule 70 and token LESS_EQUAL resolved as reduce.
Conflict in state 93 between rule 70 and token '+' resolved as reduce.
Conflict in state 93 between rule 70 and token '-' resolved as reduce.
Conflict in state 93 between rule 70 and token '*' resolved as reduce.
Conflict in state 93 between rule 70 and token '/' resolved as reduce.
Conflict in state 93 between rule 70 and token POW resolved as shift.
Conflict in state 93 between rule 70 and token '[' resolved as shift.
Conflict in state 94 between rule 69 and token OR resolved as reduce.
Conflict in state 94 between rule 69 and token AND resolved as reduce.
Conflict in state 94 between rule 69 and token '=' resolved as reduce.
Conflict in state 94 between rule 69 and token NOT_EQUAL resolved as reduce.
Conflict in state 94 between rule 69 and token '>' resolved as reduce.
Conflict in state 94 between rule 69 and token '<' resolved as reduce.
Conflict in state 94 between rule 69 and token GREATER_EQUAL resolved as reduce.
Conflict in state 94 between rule 69 and token LESS_EQUAL resolved as reduce.
Conflict in state 94 between rule 69 and token '+' resolved as reduce.
Conflict in state 94 between rule 69 and token '-' resolved as reduce.
Conflict in state 94 between rule 69 and token '*' resolved as reduce.
Conflict in state 94 between rule 69 and token '/' resolved as reduce.
Conflict in state 94 between rule 69 and token POW resolved as shift.
Conflict in state 94 between rule 69 and token '[' resolved as shift.
Conflict in state 137 between rule 64 and token OR resolved as reduce.
Conflict in state 137 between rule 64 and token AND resolved as shift.
Conflict in state 137 between rule 64 and token '=' resolved as shift.
Conflict in state 137 between rule 64 and token NOT_EQUAL resolved as shift.
Conflict in state 137 between rule 64 and token '>' resolved as shift.
Conflict in state 137 between rule 64 and token '<' resolved as shift.
Conflict in state 137 between rule 64 and token GREATER_EQUAL resolved as shift.
Conflict in state 137 between rule 64 and token LESS_EQUAL resolved as shift.
Conflict in state 137 between rule 64 and token '+' resolved as shift.
Conflict in state 137 between rule 64 and token '-' resolved as shift.
Conflict in state 137 between rule 64 and token '*' resolved as shift.
Conflict in state 137 between rule 64 and token '/' resolved as shift.
Conflict in state 137 between rule 64 and token POW resolved as shift.
Conflict in state 137 between rule 64 and token '[' resolved as shift.
Conflict in state 138 between rule 63 and token OR resolved as reduce.
Conflict in state 138 between rule 63 and token AND resolved as reduce.
Conflict in state 138 between rule 63 and token '=' resolved as shift.
Conflict in state 138 between rule 63 and token NOT_EQUAL resolved as shift.
Conflict in state 138 between rule 63 and token '>' resolved as shift.
Conflict in state 138 between rule 63 and token '<' resolved as shift.
Conflict in state 138 between rule 63 and token GREATER_EQUAL resolved as shift.
Conflict in state 138 between rule 63 and token LESS_EQUAL resolved as shift.
Conflict in state 138 between rule 63 and token '+' resolved as shift.
Conflict in state 138 between rule 63 and token '-' resolved as shift.
Conflict in state 138 between rule 63 and token '*' resolved as shift.
Conflict in state 138 between rule 63 and token '/' resolved as shift.
Conflict in state 138 between rule 63 and token POW resolved as shift.
Conflict in state 138 between rule 63 and token '[' resolved as shift.
Conflict in state 139 between rule 68 and token OR resolved as reduce.
Conflict in state 139 between rule 68 and token AND resolved as reduce.
Conflict in state 139 between rule 68 and token '=' resolved as reduce.
Conflict in state 139 between rule 68 and token NOT_EQUAL resolved as reduce.
Conflict in state 139 between rule 68 and token '>' resolved as shift.
Conflict in state 139 between rule 68 and token '<' resolved as shift.
Conflict in state 139 between rule 68 and token GREATER_EQUAL resolved as shift.
Conflict in state 139 between rule 68 and token LESS_EQUAL resolved as shift.
Conflict in state 139 between rule 68 and token '+' resolved as shift.
Conflict in state 139 between rule 68 and token '-' resolved as shift.
Conflict in state 139 between rule 68 and token '*' resolved as shift.
Conflict in state 139 between rule 68 and token '/' resolved as shift.
Conflict in state 139 between rule 68 and token POW resolved as shift.
Conflict in state 139 between rule 68 and token '[' resolved as shift.
Conflict in state 140 between rule 67 and token OR resolved as reduce.
Conflict in state 140 between rule 67 and token AND resolved as reduce.
Conflict in state 140 between rule 67 and token '=' resolved as reduce.
Conflict in state 140 between rule 67 and token NOT_EQUAL resolved as reduce.
Conflict in state 140 between rule 67 and token '>' resolved as shift.
Conflict in state 140 between rule 67 and token '<' resolved as shift.
Conflict in state 140 between rule 67 and token GREATER_EQUAL resolved as shift.
Conflict in state 140 between rule 67 and token LESS_EQUAL resolved as shift.
Conflict in state 140 between rule 67 and token '+' resolved as shift.
Conflict in state 140 between rule 67 and token '-' resolved as shift.
Conflict in state 140 between rule 67 and token '*' resolved as shift.
Conflict in state 140 between rule 67 and token '/' resolved as shift.
Conflict in state 140 between rule 67 and token POW resolved as shift.
Conflict in state 140 between rule 67 and token '[' resolved as shift.
Conflict in state 141 between rule 61 and token OR resolved as reduce.
Conflict in state 141 between rule 61 and token AND resolved as reduce.
Conflict in state 141 between rule 61 and token '=' resolved as reduce.
Conflict in state 141 between rule 61 and token NOT_EQUAL resolved as reduce.
Conflict in state 141 between rule 61 and token '>' resolved as reduce.
Conflict in state 141 between rule 61 and token '<' resolved as reduce.
Conflict in state 141 between rule 61 and token GREATER_EQUAL resolved as reduce.
Conflict in state 141 between rule 61 and token LESS_EQUAL resolved as reduce.
Conflict in state 141 between rule 61 and token '+' resolved as shift.
Conflict in state 141 between rule 61 and token '-' resolved as shift.
Conflict in state 141 between rule 61 and token '*' resolved as shift.
Conflict in state 141 between rule 61 and token '/' resolved as shift.
Conflict in state 141 between rule 61 and token POW resolved as shift.
Conflict in state 141 between rule 61 and token '[' resolved as shift.
Conflict in state 142 between rule 60 and token OR resolved as reduce.
Conflict in state 142 between rule 60 and token AND resolved as reduce.
Conflict in state 142 between rule 60 and token '=' resolved as reduce.
Conflict in state 142 between rule 60 and token NOT_EQUAL resolved as reduce.
Conflict in state 142 between rule 60 and token '>' resolved as reduce.
Conflict in state 142 between rule 60 and token '<' resolved as reduce.
Conflict in state 142 between rule 60 and token GREATER_EQUAL resolved as reduce.
Conflict in state 142 between rule 60 and token LESS_EQUAL resolved as reduce.
Conflict in state 142 between rule 60 and token '+' resolved as shift.
Conflict in state 142 between rule 60 and token '-' resolved as shift.
Conflict in state 142 between rule 60 and token '*' resolved as shift.
Conflict in state 142 between rule 60 and token '/' resolved as shift.
Conflict in state 142 between rule 60 and token POW resolved as shift.
Conflict in state 142 between rule 60 and token '[' resolved as shift.
Conflict in state 143 between rule 65 and token OR resolved as reduce.
Conflict in state 143 between rule 65 and token AND resolved as reduce.
Conflict in state 143 between rule 65 and token '=' resolved as reduce.
Conflict in state 143 between rule 65 and token NOT_EQUAL resolved as reduce.
Conflict in state 143 between rule 65 and token '>' resolved as reduce.
Conflict in state 143 between rule 65 and token '<' resolved as reduce.
Conflict in state 143 between rule 65 and token GREATER_EQUAL resolved as reduce.
Conflict in state 143 between rule 65 and token LESS_EQUAL resolved as reduce.
Conflict in state 143 between rule 65 and token '+' resolved as shift.
Conflict in state 143 between rule 65 and token '-' resolved as shift.
Conflict in state 143 between rule 65 and token '*' resolved as shift.
Conflict in state 143 between rule 65 and token '/' resolved as shift.
Conflict in state 143 between rule 65 and token POW resolved as shift.
Conflict in state 143 between rule 65 and token '[' resolved as shift.
Conflict in state 144 between rule 66 and token OR resolved as reduce.
Conflict in state 144 between rule 66 and token AND resolved as reduce.
Conflict in state 144 between rule 66 and token '=' resolved as reduce.
Conflict in state 144 between rule 66 and token NOT_EQUAL resolved as reduce.
Conflict in state 144 between rule 66 and token '>' resolved as reduce.
Conflict in state 144 between rule 66 and token '<' resolved as reduce.
Conflict in state 144 between rule 66 and token GREATER_EQUAL resolved as reduce.
Conflict in state 144 between rule 66 and token LESS_EQUAL resolved as reduce.
Conflict in state 144 between rule 66 and token '+' resolved as shift.
Conflict in state 144 between rule 66 and token '-' resolved as shift.
Conflict in state 144 between rule 66 and token '*' resolved as shift.
Conflict in state 144 between rule 66 and token '/' resolved as shift.
Conflict in state 144 between rule 66 and token POW resolved as shift.
Conflict in state 144 between rule 66 and token '[' resolved as shift.
Conflict in state 145 between rule 56 and token OR resolved as reduce.
Conflict in state 145 between rule 56 and token AND resolved as reduce.
Conflict in state 145 between rule 56 and token '=' resolved as reduce.
Conflict in state 145 between rule 56 and token NOT_EQUAL resolved as reduce.
Conflict in state 145 between rule 56 and token '>' resolved as reduce.
Conflict in state 145 between rule 56 and token '<' resolved as reduce.
Conflict in state 145 between rule 56 and token GREATER_EQUAL resolved as reduce.
Conflict in state 145 between rule 56 and token LESS_EQUAL resolved as reduce.
Conflict in state 145 between rule 56 and token '+' resolved as reduce.
Conflict in state 145 between rule 56 and token '-' resolved as reduce.
Conflict in state 145 between rule 56 and token '*' resolved as shift.
Conflict in state 145 between rule 56 and token '/' resolved as shift.
Conflict in state 145 between rule 56 and token POW resolved as shift.
Conflict in state 145 between rule 56 and token '[' resolved as shift.
Conflict in state 146 between rule 57 and token OR resolved as reduce.
Conflict in state 146 between rule 57 and token AND resolved as reduce.
Conflict in state 146 between rule 57 and token '=' resolved as reduce.
Conflict in state 146 between rule 57 and token NOT_EQUAL resolved as reduce.
Conflict in state 146 between rule 57 and token '>' resolved as reduce.
Conflict in state 146 between rule 57 and token '<' resolved as reduce.
Conflict in state 146 between rule 57 and token GREATER_EQUAL resolved as reduce.
Conflict in state 146 between rule 57 and token LESS_EQUAL resolved as reduce.
Conflict in state 146 between rule 57 and token '+' resolved as reduce.
Conflict in state 146 between rule 57 and token '-' resolved as reduce.
Conflict in state 146 between rule 57 and token '*' resolved as shift.
Conflict in state 146 between rule 57 and token '/' resolved as shift.
Conflict in state 146 between rule 57 and token POW resolved as shift.
Conflict in state 146 between rule 57 and token '[' resolved as shift.
Conflict in state 147 between rule 58 and token OR resolved as reduce.
Conflict in state 147 between rule 58 and token AND resolved as reduce.
Conflict in state 147 between rule 58 and token '=' resolved as reduce.
Conflict in state 147 between rule 58 and token NOT_EQUAL resolved as reduce.
Conflict in state 147 between rule 58 and token '>' resolved as reduce.
Conflict in state 147 between rule 58 and token '<' resolved as reduce.
Conflict in state 147 between rule 58 and token GREATER_EQUAL resolved as reduce.
Conflict in state 147 between rule 58 and token LESS_EQUAL resolved as reduce.
Conflict in state 147 between rule 58 and token '+' resolved as reduce.
Conflict in state 147 between rule 58 and token '-' resolved as reduce.
Conflict in state 147 between rule 58 and token '*' resolved as reduce.
Conflict in state 147 between rule 58 and token '/' resolved as reduce.
Conflict in state 147 between rule 58 and token POW resolved as shift.
Conflict in state 147 between rule 58 and token '[' resolved as shift.
Conflict in state 148 between rule 59 and token OR resolved as reduce.
Conflict in state 148 between rule 59 and token AND resolved as reduce.
Conflict in state 148 between rule 59 and token '=' resolved as reduce.
Conflict in state 148 between rule 59 and token NOT_EQUAL resolved as reduce.
Conflict in state 148 between rule 59 and token '>' resolved as reduce.
Conflict in state 148 between rule 59 and token '<' resolved as reduce.
Conflict in state 148 between rule 59 and token GREATER_EQUAL resolved as reduce.
Conflict in state 148 between rule 59 and token LESS_EQUAL resolved as reduce.
Conflict in state 148 between rule 59 and token '+' resolved as reduce.
Conflict in state 148 between rule 59 and token '-' resolved as reduce.
Conflict in state 148 between rule 59 and token '*' resolved as reduce.
Conflict in state 148 between rule 59 and token '/' resolved as reduce.
Conflict in state 148 between rule 59 and token POW resolved as shift.
Conflict in state 148 between rule 59 and token '[' resolved as shift.
Conflict in state 149 between rule 62 and token OR resolved as reduce.
Conflict in state 149 between rule 62 and token AND resolved as reduce.
Conflict in state 149 between rule 62 and token '=' resolved as reduce.
Conflict in state 149 between rule 62 and token NOT_EQUAL resolved as reduce.
Conflict in state 149 between rule 62 and token '>' resolved as reduce.
Conflict in state 149 between rule 62 and token '<' resolved as reduce.
Conflict in state 149 between rule 62 and token GREATER_EQUAL resolved as reduce.
Conflict in state 149 between rule 62 and token LESS_EQUAL resolved as reduce.
Conflict in state 149 between rule 62 and token '+' resolved as reduce.
Conflict in state 149 between rule 62 and token '-' resolved as reduce.
Conflict in state 149 between rule 62 and token '*' resolved as reduce.
Conflict in state 149 between rule 62 and token '/' resolved as reduce.
Conflict in state 149 between rule 62 and token POW resolved as reduce.
Conflict in state 149 between rule 62 and token '[' resolved as shift.

Grammar
rule 1    Program -> EndlList ProgramElementList
rule 2    ProgramElementList -> AlgorithmImplementation
rule 3    ProgramElementList -> ProgramElementList ProgramElement
rule 4    ProgramElement -> AlgorithmFunctionImplementation
rule 5    ProgramElement -> AlgorithmProcedureImplementation
rule 6    BlockStatement ->		/* empty */
rule 7    BlockStatement -> StatementList EndlList
rule 8    StatementList -> Statement
rule 9    StatementList -> StatementList EndlList Statement
rule 10   Statement -> InputList
rule 11   Statement -> OutputList
rule 12   Statement -> ID '(' ExpressionList ')'
rule 13   Statement -> ID
rule 14   Statement -> Expression ASSIGN Expression
rule 15   Statement -> CycleStatement
rule 16   Statement -> WhileStatement
rule 17   Statement -> ForStatement
rule 18   Statement -> IfStatement
rule 19   Statement -> TimesStatement
rule 20   Statement -> SwitchCaseStatement
rule 21   Statement -> VarList
rule 22   InputList -> INPUT ID
rule 23   InputList -> InputList ',' ID
rule 24   OutputList -> OUTPUT Expression
rule 25   OutputList -> OutputList ',' Expression
rule 26   OutputList -> OutputList ',' NS
rule 27   CycleStatement -> CYCLE_BEGIN EndlList BlockStatement CYCLE_END
rule 28   CycleStatement -> CYCLE_BEGIN EndlList BlockStatement CYCLE_END_IF Statement
rule 29   TimesStatement -> CYCLE_BEGIN Expression TIMES EndlList BlockStatement CYCLE_END
rule 30   TimesStatement -> CYCLE_BEGIN Expression TIMES EndlList BlockStatement CYCLE_END_IF Statement
rule 31   IfStatement -> IF Statement EndlList THEN EndlList BlockStatement DONE
rule 32   IfStatement -> IF Statement EndlList THEN EndlList BlockStatement ELSE BlockStatement DONE
rule 33   WhileStatement -> CYCLE_BEGIN WHILE Expression EndlList BlockStatement CYCLE_END
rule 34   WhileStatement -> CYCLE_BEGIN WHILE Expression EndlList BlockStatement CYCLE_END_IF Statement
rule 35   ForStatement -> CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END
rule 36   ForStatement -> CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END_IF Statement
rule 37   ForStatement -> CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END
rule 38   ForStatement -> CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement
rule 39   SwitchCaseStatement -> SWITCH Expression EndlList CaseList DONE
rule 40   SwitchCaseStatement -> SWITCH Expression EndlList CaseList ELSE Expression EndlList DONE
rule 41   CaseList -> CASE Expression ':' EndlList BlockStatement
rule 42   CaseList -> CaseList CASE Expression ':' EndlList BlockStatement
rule 43   EndlOpt ->		/* empty */
rule 44   EndlOpt -> EndlList
rule 45   EndlList -> ENDL
rule 46   EndlList -> EndlList ENDL
rule 47   ExpressionList -> Expression
rule 48   ExpressionList -> ExpressionList ',' Expression
rule 49   Expression -> INT_LITERAL
rule 50   Expression -> CHAR_LITERAL
rule 51   Expression -> FLOAT_LITERAL
rule 52   Expression -> STRING_LITERAL
rule 53   Expression -> BOOL_LITERAL
rule 54   Expression -> ID '(' ExpressionList ')'
rule 55   Expression -> ID
rule 56   Expression -> Expression '+' Expression
rule 57   Expression -> Expression '-' Expression
rule 58   Expression -> Expression '*' Expression
rule 59   Expression -> Expression '/' Expression
rule 60   Expression -> Expression '<' Expression
rule 61   Expression -> Expression '>' Expression
rule 62   Expression -> Expression POW Expression
rule 63   Expression -> Expression AND Expression
rule 64   Expression -> Expression OR Expression
rule 65   Expression -> Expression GREATER_EQUAL Expression
rule 66   Expression -> Expression LESS_EQUAL Expression
rule 67   Expression -> Expression NOT_EQUAL Expression
rule 68   Expression -> Expression '=' Expression
rule 69   Expression -> '-' Expression
rule 70   Expression -> '+' Expression
rule 71   Expression -> Expression '[' Expression ']'
rule 72   Expression -> Expression '[' Expression ':' Expression ']'
rule 73   Expression -> NOT Expression
rule 74   Type -> BOOL
rule 75   Type -> CHAR
rule 76   Type -> FLOAT
rule 77   Type -> INT
rule 78   Type -> STRING
rule 79   ArrType -> INTTAB
rule 80   ArrType -> FLOATTAB
rule 81   ArrType -> BOOLTAB
rule 82   ArrType -> CHARTAB
rule 83   ArrType -> STRINGTAB
rule 84   ArrType -> Type TAB
rule 85   AlgorithmImplementation -> ALG ParamDeclarationList EndlList BEGIN BlockStatement END
rule 86   AlgorithmImplementation -> ALG ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END
rule 87   AlgorithmImplementation -> ALG ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END
rule 88   AlgorithmImplementation -> ALG ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END
rule 89   AlgorithmFunctionImplementation -> ALG Type ID ParamDeclarationList EndlList BEGIN BlockStatement END
rule 90   AlgorithmFunctionImplementation -> ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END
rule 91   AlgorithmFunctionImplementation -> ALG Type ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END
rule 92   AlgorithmFunctionImplementation -> ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END
rule 93   AlgorithmProcedureImplementation -> ALG ID ParamDeclarationList EndlList BEGIN BlockStatement END
rule 94   AlgorithmProcedureImplementation -> ALG ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END
rule 95   AlgorithmProcedureImplementation -> ALG ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END
rule 96   AlgorithmProcedureImplementation -> ALG ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END
rule 97   VarDeclaration -> Type ID
rule 98   VarDeclaration -> ArrType ID '[' Expression ':' Expression ']'
rule 99   VarDeclaration -> ArrType ID '[' Expression ':' Expression ',' Expression ':' Expression ']'
rule 100  Var -> VarDeclaration
rule 101  Var -> VarDeclaration ASSIGN Expression
rule 102  VarList -> Var
rule 103  VarList -> VarList ',' EndlOpt Var
rule 104  VarList -> VarList ',' EndlOpt ID
rule 105  ParamDeclarationList ->		/* empty */
rule 106  ParamDeclarationList -> '(' ParamList ')'
rule 107  ParamList -> Param
rule 108  ParamList -> ParamList ',' Param
rule 109  ParamModifier -> ARG
rule 110  ParamModifier -> RES
rule 111  ParamModifier -> ARGRES
rule 112  Param -> VarDeclaration
rule 113  Param -> ParamModifier VarDeclaration

Terminals, with rules where they appear

$ (-1)
'(' (40) 12 54 106
')' (41) 12 54 106
'*' (42) 58
'+' (43) 56 70
',' (44) 23 25 26 48 99 103 104 108
'-' (45) 57 69
'/' (47) 59
':' (58) 41 42 72 98 99
'<' (60) 60
'=' (61) 68
'>' (62) 61
'[' (91) 71 72 98 99
']' (93) 71 72 98 99
error (256)
ALG (258) 85 86 87 88 89 90 91 92 93 94 95 96
BEGIN (259) 85 86 87 88 89 90 91 92 93 94 95 96
END (260) 85 86 87 88 89 90 91 92 93 94 95 96
ARG (261) 109
RES (262) 110
ARGRES (263) 111
DANO (264) 86 88 90 92 94 96
NADO (265) 87 88 91 92 95 96
NS (266) 26
ENDL (267) 45 46
INT (268) 77
FLOAT (269) 76
BOOL (270) 74
CHAR (271) 75
STRING (272) 78
TAB (273) 84
INTTAB (274) 79
FLOATTAB (275) 80
BOOLTAB (276) 81
CHARTAB (277) 82
STRINGTAB (278) 83
ID (279) 12 13 22 23 35 36 37 38 54 55 89 90 91 92 93 94 95 96 97 98
    99 104
INPUT (280) 22
OUTPUT (281) 24
TRUE (282)
FALSE (283)
NOT (284) 73
IF (285) 31 32
THEN (286) 31 32
ELSE (287) 32 40
CYCLE_BEGIN (288) 27 28 29 30 33 34 35 36 37 38
CYCLE_END (289) 27 29 33 35 37
CYCLE_END_IF (290) 28 30 34 36 38
DONE (291) 31 32 39 40
STEP (292) 37 38
FROM (293) 35 36 37 38
TO (294) 35 36 37 38
SWITCH (295) 39 40
CASE (296) 41 42
WHILE (297) 33 34
FOR (298) 35 36 37 38
TIMES (299) 29 30
INT_LITERAL (300) 49
FLOAT_LITERAL (301) 51
CHAR_LITERAL (302) 50
STRING_LITERAL (303) 52
BOOL_LITERAL (304) 53
ASSIGN (305) 14 101
OR (306) 64
AND (307) 63
NOT_EQUAL (308) 67
GREATER_EQUAL (309) 65
LESS_EQUAL (310) 66
UMINUS (311)
UPLUS (312)
POW (313) 62

Nonterminals, with rules where they appear

Program (72)
    on left: 1
ProgramElementList (73)
    on left: 2 3, on right: 1 3
ProgramElement (74)
    on left: 4 5, on right: 3
BlockStatement (75)
    on left: 6 7, on right: 27 28 29 30 31 32 33 34 35 36 37 38 41
    42 85 86 87 88 89 90 91 92 93 94 95 96
StatementList (76)
    on left: 8 9, on right: 7 9
Statement (77)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21, on right: 8 9 28
    30 31 32 34 36 38
InputList (78)
    on left: 22 23, on right: 10 23
OutputList (79)
    on left: 24 25 26, on right: 11 25 26
CycleStatement (80)
    on left: 27 28, on right: 15
TimesStatement (81)
    on left: 29 30, on right: 19
IfStatement (82)
    on left: 31 32, on right: 18
WhileStatement (83)
    on left: 33 34, on right: 16
ForStatement (84)
    on left: 35 36 37 38, on right: 17
SwitchCaseStatement (85)
    on left: 39 40, on right: 20
CaseList (86)
    on left: 41 42, on right: 39 40 42
EndlOpt (87)
    on left: 43 44, on right: 103 104
EndlList (88)
    on left: 45 46, on right: 1 7 9 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41 42 44 46 85 86 87 88 89 90 91 92 93 94 95 96
ExpressionList (89)
    on left: 47 48, on right: 12 48 54
Expression (90)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72 73, on right: 14 24 25 29 30 33 34 35 36 37 38
    39 40 41 42 47 48 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 86 87 88 90 91 92 94 95 96 98 99 101
Type (91)
    on left: 74 75 76 77 78, on right: 84 89 90 91 92 97
ArrType (92)
    on left: 79 80 81 82 83 84, on right: 98 99
AlgorithmImplementation (93)
    on left: 85 86 87 88, on right: 2
AlgorithmFunctionImplementation (94)
    on left: 89 90 91 92, on right: 4
AlgorithmProcedureImplementation (95)
    on left: 93 94 95 96, on right: 5
VarDeclaration (96)
    on left: 97 98 99, on right: 100 101 112 113
Var (97)
    on left: 100 101, on right: 102 103
VarList (98)
    on left: 102 103 104, on right: 21 103 104
ParamDeclarationList (99)
    on left: 105 106, on right: 85 86 87 88 89 90 91 92 93 94 95 96
ParamList (100)
    on left: 107 108, on right: 106 108
ParamModifier (101)
    on left: 109 110 111, on right: 113
Param (102)
    on left: 112 113, on right: 107 108


state 0

    ENDL	shift, and go to state 1

    Program	go to state 275
    EndlList	go to state 2



state 1

    EndlList  ->  ENDL .   (rule 45)

    $default	reduce using rule 45 (EndlList)



state 2

    Program  ->  EndlList . ProgramElementList   (rule 1)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ALG 	shift, and go to state 3
    ENDL	shift, and go to state 4

    ProgramElementList	go to state 5
    AlgorithmImplementation	go to state 6



state 3

    AlgorithmImplementation  ->  ALG . ParamDeclarationList EndlList BEGIN BlockStatement END   (rule 85)
    AlgorithmImplementation  ->  ALG . ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 86)
    AlgorithmImplementation  ->  ALG . ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 87)
    AlgorithmImplementation  ->  ALG . ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 88)

    '(' 	shift, and go to state 7

    $default	reduce using rule 105 (ParamDeclarationList)

    ParamDeclarationList	go to state 8



state 4

    EndlList  ->  EndlList ENDL .   (rule 46)

    $default	reduce using rule 46 (EndlList)



state 5

    Program  ->  EndlList ProgramElementList .   (rule 1)
    ProgramElementList  ->  ProgramElementList . ProgramElement   (rule 3)

    ALG 	shift, and go to state 9

    $default	reduce using rule 1 (Program)

    ProgramElement	go to state 10
    AlgorithmFunctionImplementation	go to state 11
    AlgorithmProcedureImplementation	go to state 12



state 6

    ProgramElementList  ->  AlgorithmImplementation .   (rule 2)

    $default	reduce using rule 2 (ProgramElementList)



state 7

    ParamDeclarationList  ->  '(' . ParamList ')'   (rule 106)

    ARG 	shift, and go to state 13
    RES 	shift, and go to state 14
    ARGRES	shift, and go to state 15
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25

    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 28
    ParamList	go to state 29
    ParamModifier	go to state 30
    Param	go to state 31



state 8

    AlgorithmImplementation  ->  ALG ParamDeclarationList . EndlList BEGIN BlockStatement END   (rule 85)
    AlgorithmImplementation  ->  ALG ParamDeclarationList . EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 86)
    AlgorithmImplementation  ->  ALG ParamDeclarationList . EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 87)
    AlgorithmImplementation  ->  ALG ParamDeclarationList . EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 88)

    ENDL	shift, and go to state 1

    EndlList	go to state 32



state 9

    AlgorithmFunctionImplementation  ->  ALG . Type ID ParamDeclarationList EndlList BEGIN BlockStatement END   (rule 89)
    AlgorithmFunctionImplementation  ->  ALG . Type ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG . Type ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 91)
    AlgorithmFunctionImplementation  ->  ALG . Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 92)
    AlgorithmProcedureImplementation  ->  ALG . ID ParamDeclarationList EndlList BEGIN BlockStatement END   (rule 93)
    AlgorithmProcedureImplementation  ->  ALG . ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 94)
    AlgorithmProcedureImplementation  ->  ALG . ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 95)
    AlgorithmProcedureImplementation  ->  ALG . ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 96)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    ID  	shift, and go to state 33

    Type	go to state 34



state 10

    ProgramElementList  ->  ProgramElementList ProgramElement .   (rule 3)

    $default	reduce using rule 3 (ProgramElementList)



state 11

    ProgramElement  ->  AlgorithmFunctionImplementation .   (rule 4)

    $default	reduce using rule 4 (ProgramElement)



state 12

    ProgramElement  ->  AlgorithmProcedureImplementation .   (rule 5)

    $default	reduce using rule 5 (ProgramElement)



state 13

    ParamModifier  ->  ARG .   (rule 109)

    $default	reduce using rule 109 (ParamModifier)



state 14

    ParamModifier  ->  RES .   (rule 110)

    $default	reduce using rule 110 (ParamModifier)



state 15

    ParamModifier  ->  ARGRES .   (rule 111)

    $default	reduce using rule 111 (ParamModifier)



state 16

    Type  ->  INT .   (rule 77)

    $default	reduce using rule 77 (Type)



state 17

    Type  ->  FLOAT .   (rule 76)

    $default	reduce using rule 76 (Type)



state 18

    Type  ->  BOOL .   (rule 74)

    $default	reduce using rule 74 (Type)



state 19

    Type  ->  CHAR .   (rule 75)

    $default	reduce using rule 75 (Type)



state 20

    Type  ->  STRING .   (rule 78)

    $default	reduce using rule 78 (Type)



state 21

    ArrType  ->  INTTAB .   (rule 79)

    $default	reduce using rule 79 (ArrType)



state 22

    ArrType  ->  FLOATTAB .   (rule 80)

    $default	reduce using rule 80 (ArrType)



state 23

    ArrType  ->  BOOLTAB .   (rule 81)

    $default	reduce using rule 81 (ArrType)



state 24

    ArrType  ->  CHARTAB .   (rule 82)

    $default	reduce using rule 82 (ArrType)



state 25

    ArrType  ->  STRINGTAB .   (rule 83)

    $default	reduce using rule 83 (ArrType)



state 26

    ArrType  ->  Type . TAB   (rule 84)
    VarDeclaration  ->  Type . ID   (rule 97)

    TAB 	shift, and go to state 35
    ID  	shift, and go to state 36



state 27

    VarDeclaration  ->  ArrType . ID '[' Expression ':' Expression ']'   (rule 98)
    VarDeclaration  ->  ArrType . ID '[' Expression ':' Expression ',' Expression ':' Expression ']'   (rule 99)

    ID  	shift, and go to state 37



state 28

    Param  ->  VarDeclaration .   (rule 112)

    $default	reduce using rule 112 (Param)



state 29

    ParamDeclarationList  ->  '(' ParamList . ')'   (rule 106)
    ParamList  ->  ParamList . ',' Param   (rule 108)

    ',' 	shift, and go to state 38
    ')' 	shift, and go to state 39



state 30

    Param  ->  ParamModifier . VarDeclaration   (rule 113)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25

    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 40



state 31

    ParamList  ->  Param .   (rule 107)

    $default	reduce using rule 107 (ParamList)



state 32

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList . BEGIN BlockStatement END   (rule 85)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList . DANO Expression EndlList BEGIN BlockStatement END   (rule 86)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList . NADO Expression EndlList BEGIN BlockStatement END   (rule 87)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList . DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 88)

    BEGIN	shift, and go to state 41
    DANO	shift, and go to state 42
    NADO	shift, and go to state 43
    ENDL	shift, and go to state 4



state 33

    AlgorithmProcedureImplementation  ->  ALG ID . ParamDeclarationList EndlList BEGIN BlockStatement END   (rule 93)
    AlgorithmProcedureImplementation  ->  ALG ID . ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 94)
    AlgorithmProcedureImplementation  ->  ALG ID . ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 95)
    AlgorithmProcedureImplementation  ->  ALG ID . ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 96)

    '(' 	shift, and go to state 7

    $default	reduce using rule 105 (ParamDeclarationList)

    ParamDeclarationList	go to state 44



state 34

    AlgorithmFunctionImplementation  ->  ALG Type . ID ParamDeclarationList EndlList BEGIN BlockStatement END   (rule 89)
    AlgorithmFunctionImplementation  ->  ALG Type . ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG Type . ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 91)
    AlgorithmFunctionImplementation  ->  ALG Type . ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 92)

    ID  	shift, and go to state 45



state 35

    ArrType  ->  Type TAB .   (rule 84)

    $default	reduce using rule 84 (ArrType)



state 36

    VarDeclaration  ->  Type ID .   (rule 97)

    $default	reduce using rule 97 (VarDeclaration)



state 37

    VarDeclaration  ->  ArrType ID . '[' Expression ':' Expression ']'   (rule 98)
    VarDeclaration  ->  ArrType ID . '[' Expression ':' Expression ',' Expression ':' Expression ']'   (rule 99)

    '[' 	shift, and go to state 46



state 38

    ParamList  ->  ParamList ',' . Param   (rule 108)

    ARG 	shift, and go to state 13
    RES 	shift, and go to state 14
    ARGRES	shift, and go to state 15
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25

    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 28
    ParamModifier	go to state 30
    Param	go to state 47



state 39

    ParamDeclarationList  ->  '(' ParamList ')' .   (rule 106)

    $default	reduce using rule 106 (ParamDeclarationList)



state 40

    Param  ->  ParamModifier VarDeclaration .   (rule 113)

    $default	reduce using rule 113 (Param)



state 41

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList BEGIN . BlockStatement END   (rule 85)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 62
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 42

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO . Expression EndlList BEGIN BlockStatement END   (rule 86)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO . Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 88)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 78



state 43

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList NADO . Expression EndlList BEGIN BlockStatement END   (rule 87)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 79



state 44

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList . EndlList BEGIN BlockStatement END   (rule 93)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList . EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 94)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList . EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 95)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList . EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 96)

    ENDL	shift, and go to state 1

    EndlList	go to state 80



state 45

    AlgorithmFunctionImplementation  ->  ALG Type ID . ParamDeclarationList EndlList BEGIN BlockStatement END   (rule 89)
    AlgorithmFunctionImplementation  ->  ALG Type ID . ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG Type ID . ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 91)
    AlgorithmFunctionImplementation  ->  ALG Type ID . ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 92)

    '(' 	shift, and go to state 7

    $default	reduce using rule 105 (ParamDeclarationList)

    ParamDeclarationList	go to state 81



state 46

    VarDeclaration  ->  ArrType ID '[' . Expression ':' Expression ']'   (rule 98)
    VarDeclaration  ->  ArrType ID '[' . Expression ':' Expression ',' Expression ':' Expression ']'   (rule 99)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 82



state 47

    ParamList  ->  ParamList ',' Param .   (rule 108)

    $default	reduce using rule 108 (ParamList)



state 48

    Statement  ->  ID . '(' ExpressionList ')'   (rule 12)
    Statement  ->  ID .   (rule 13)
    Expression  ->  ID . '(' ExpressionList ')'   (rule 54)
    Expression  ->  ID .   (rule 55)

    '(' 	shift, and go to state 83

    ENDL	reduce using rule 13 (Statement)
    $default	reduce using rule 55 (Expression)



state 49

    InputList  ->  INPUT . ID   (rule 22)

    ID  	shift, and go to state 84



state 50

    OutputList  ->  OUTPUT . Expression   (rule 24)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 85



state 51

    Expression  ->  NOT . Expression   (rule 73)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 86



state 52

    IfStatement  ->  IF . Statement EndlList THEN EndlList BlockStatement DONE   (rule 31)
    IfStatement  ->  IF . Statement EndlList THEN EndlList BlockStatement ELSE BlockStatement DONE   (rule 32)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Statement	go to state 87
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 53

    CycleStatement  ->  CYCLE_BEGIN . EndlList BlockStatement CYCLE_END   (rule 27)
    CycleStatement  ->  CYCLE_BEGIN . EndlList BlockStatement CYCLE_END_IF Statement   (rule 28)
    TimesStatement  ->  CYCLE_BEGIN . Expression TIMES EndlList BlockStatement CYCLE_END   (rule 29)
    TimesStatement  ->  CYCLE_BEGIN . Expression TIMES EndlList BlockStatement CYCLE_END_IF Statement   (rule 30)
    WhileStatement  ->  CYCLE_BEGIN . WHILE Expression EndlList BlockStatement CYCLE_END   (rule 33)
    WhileStatement  ->  CYCLE_BEGIN . WHILE Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 34)
    ForStatement  ->  CYCLE_BEGIN . FOR ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN . FOR ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 36)
    ForStatement  ->  CYCLE_BEGIN . FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN . FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)

    ENDL	shift, and go to state 1
    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    WHILE	shift, and go to state 88
    FOR 	shift, and go to state 89
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    EndlList	go to state 90
    Expression	go to state 91



state 54

    SwitchCaseStatement  ->  SWITCH . Expression EndlList CaseList DONE   (rule 39)
    SwitchCaseStatement  ->  SWITCH . Expression EndlList CaseList ELSE Expression EndlList DONE   (rule 40)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 92



state 55

    Expression  ->  INT_LITERAL .   (rule 49)

    $default	reduce using rule 49 (Expression)



state 56

    Expression  ->  FLOAT_LITERAL .   (rule 51)

    $default	reduce using rule 51 (Expression)



state 57

    Expression  ->  CHAR_LITERAL .   (rule 50)

    $default	reduce using rule 50 (Expression)



state 58

    Expression  ->  STRING_LITERAL .   (rule 52)

    $default	reduce using rule 52 (Expression)



state 59

    Expression  ->  BOOL_LITERAL .   (rule 53)

    $default	reduce using rule 53 (Expression)



state 60

    Expression  ->  '+' . Expression   (rule 70)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 93



state 61

    Expression  ->  '-' . Expression   (rule 69)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 94



state 62

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList BEGIN BlockStatement . END   (rule 85)

    END 	shift, and go to state 95



state 63

    BlockStatement  ->  StatementList . EndlList   (rule 7)
    StatementList  ->  StatementList . EndlList Statement   (rule 9)

    ENDL	shift, and go to state 1

    EndlList	go to state 96



state 64

    StatementList  ->  Statement .   (rule 8)

    $default	reduce using rule 8 (StatementList)



state 65

    Statement  ->  InputList .   (rule 10)
    InputList  ->  InputList . ',' ID   (rule 23)

    ',' 	shift, and go to state 97

    $default	reduce using rule 10 (Statement)



state 66

    Statement  ->  OutputList .   (rule 11)
    OutputList  ->  OutputList . ',' Expression   (rule 25)
    OutputList  ->  OutputList . ',' NS   (rule 26)

    ',' 	shift, and go to state 98

    $default	reduce using rule 11 (Statement)



state 67

    Statement  ->  CycleStatement .   (rule 15)

    $default	reduce using rule 15 (Statement)



state 68

    Statement  ->  TimesStatement .   (rule 19)

    $default	reduce using rule 19 (Statement)



state 69

    Statement  ->  IfStatement .   (rule 18)

    $default	reduce using rule 18 (Statement)



state 70

    Statement  ->  WhileStatement .   (rule 16)

    $default	reduce using rule 16 (Statement)



state 71

    Statement  ->  ForStatement .   (rule 17)

    $default	reduce using rule 17 (Statement)



state 72

    Statement  ->  SwitchCaseStatement .   (rule 20)

    $default	reduce using rule 20 (Statement)



state 73

    Statement  ->  Expression . ASSIGN Expression   (rule 14)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    ASSIGN	shift, and go to state 99
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113



state 74

    Var  ->  VarDeclaration .   (rule 100)
    Var  ->  VarDeclaration . ASSIGN Expression   (rule 101)

    ASSIGN	shift, and go to state 114

    $default	reduce using rule 100 (Var)



state 75

    VarList  ->  Var .   (rule 102)

    $default	reduce using rule 102 (VarList)



state 76

    Statement  ->  VarList .   (rule 21)
    VarList  ->  VarList . ',' EndlOpt Var   (rule 103)
    VarList  ->  VarList . ',' EndlOpt ID   (rule 104)

    ',' 	shift, and go to state 115

    $default	reduce using rule 21 (Statement)



state 77

    Expression  ->  ID . '(' ExpressionList ')'   (rule 54)
    Expression  ->  ID .   (rule 55)

    '(' 	shift, and go to state 116

    $default	reduce using rule 55 (Expression)



state 78

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression . EndlList BEGIN BlockStatement END   (rule 86)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression . EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 88)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 117



state 79

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList NADO Expression . EndlList BEGIN BlockStatement END   (rule 87)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 118



state 80

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList . BEGIN BlockStatement END   (rule 93)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList . DANO Expression EndlList BEGIN BlockStatement END   (rule 94)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList . NADO Expression EndlList BEGIN BlockStatement END   (rule 95)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList . DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 96)

    BEGIN	shift, and go to state 119
    DANO	shift, and go to state 120
    NADO	shift, and go to state 121
    ENDL	shift, and go to state 4



state 81

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList . EndlList BEGIN BlockStatement END   (rule 89)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList . EndlList DANO Expression EndlList BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList . EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 91)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList . EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 92)

    ENDL	shift, and go to state 1

    EndlList	go to state 122



state 82

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    VarDeclaration  ->  ArrType ID '[' Expression . ':' Expression ']'   (rule 98)
    VarDeclaration  ->  ArrType ID '[' Expression . ':' Expression ',' Expression ':' Expression ']'   (rule 99)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    ':' 	shift, and go to state 123
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113



state 83

    Statement  ->  ID '(' . ExpressionList ')'   (rule 12)
    Expression  ->  ID '(' . ExpressionList ')'   (rule 54)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    ExpressionList	go to state 124
    Expression	go to state 125



state 84

    InputList  ->  INPUT ID .   (rule 22)

    $default	reduce using rule 22 (InputList)



state 85

    OutputList  ->  OUTPUT Expression .   (rule 24)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 24 (OutputList)



state 86

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    Expression  ->  NOT Expression .   (rule 73)

    '[' 	shift, and go to state 113

    $default	reduce using rule 73 (Expression)



state 87

    IfStatement  ->  IF Statement . EndlList THEN EndlList BlockStatement DONE   (rule 31)
    IfStatement  ->  IF Statement . EndlList THEN EndlList BlockStatement ELSE BlockStatement DONE   (rule 32)

    ENDL	shift, and go to state 1

    EndlList	go to state 126



state 88

    WhileStatement  ->  CYCLE_BEGIN WHILE . Expression EndlList BlockStatement CYCLE_END   (rule 33)
    WhileStatement  ->  CYCLE_BEGIN WHILE . Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 34)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 127



state 89

    ForStatement  ->  CYCLE_BEGIN FOR . ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR . ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 36)
    ForStatement  ->  CYCLE_BEGIN FOR . ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR . ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)

    ID  	shift, and go to state 128



state 90

    CycleStatement  ->  CYCLE_BEGIN EndlList . BlockStatement CYCLE_END   (rule 27)
    CycleStatement  ->  CYCLE_BEGIN EndlList . BlockStatement CYCLE_END_IF Statement   (rule 28)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 129
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 91

    TimesStatement  ->  CYCLE_BEGIN Expression . TIMES EndlList BlockStatement CYCLE_END   (rule 29)
    TimesStatement  ->  CYCLE_BEGIN Expression . TIMES EndlList BlockStatement CYCLE_END_IF Statement   (rule 30)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    TIMES	shift, and go to state 130
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113



state 92

    SwitchCaseStatement  ->  SWITCH Expression . EndlList CaseList DONE   (rule 39)
    SwitchCaseStatement  ->  SWITCH Expression . EndlList CaseList ELSE Expression EndlList DONE   (rule 40)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 131



state 93

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  '+' Expression .   (rule 70)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 70 (Expression)



state 94

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  '-' Expression .   (rule 69)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 69 (Expression)



state 95

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList BEGIN BlockStatement END .   (rule 85)

    $default	reduce using rule 85 (AlgorithmImplementation)



state 96

    BlockStatement  ->  StatementList EndlList .   (rule 7)
    StatementList  ->  StatementList EndlList . Statement   (rule 9)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 7 (BlockStatement)

    Statement	go to state 132
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 97

    InputList  ->  InputList ',' . ID   (rule 23)

    ID  	shift, and go to state 133



state 98

    OutputList  ->  OutputList ',' . Expression   (rule 25)
    OutputList  ->  OutputList ',' . NS   (rule 26)

    NS  	shift, and go to state 134
    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 135



state 99

    Statement  ->  Expression ASSIGN . Expression   (rule 14)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 136



state 100

    Expression  ->  Expression OR . Expression   (rule 64)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 137



state 101

    Expression  ->  Expression AND . Expression   (rule 63)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 138



state 102

    Expression  ->  Expression '=' . Expression   (rule 68)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 139



state 103

    Expression  ->  Expression NOT_EQUAL . Expression   (rule 67)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 140



state 104

    Expression  ->  Expression '>' . Expression   (rule 61)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 141



state 105

    Expression  ->  Expression '<' . Expression   (rule 60)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 142



state 106

    Expression  ->  Expression GREATER_EQUAL . Expression   (rule 65)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 143



state 107

    Expression  ->  Expression LESS_EQUAL . Expression   (rule 66)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 144



state 108

    Expression  ->  Expression '+' . Expression   (rule 56)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 145



state 109

    Expression  ->  Expression '-' . Expression   (rule 57)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 146



state 110

    Expression  ->  Expression '*' . Expression   (rule 58)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 147



state 111

    Expression  ->  Expression '/' . Expression   (rule 59)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 148



state 112

    Expression  ->  Expression POW . Expression   (rule 62)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 149



state 113

    Expression  ->  Expression '[' . Expression ']'   (rule 71)
    Expression  ->  Expression '[' . Expression ':' Expression ']'   (rule 72)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 150



state 114

    Var  ->  VarDeclaration ASSIGN . Expression   (rule 101)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 151



state 115

    VarList  ->  VarList ',' . EndlOpt Var   (rule 103)
    VarList  ->  VarList ',' . EndlOpt ID   (rule 104)

    ENDL	shift, and go to state 1

    $default	reduce using rule 43 (EndlOpt)

    EndlOpt	go to state 152
    EndlList	go to state 153



state 116

    Expression  ->  ID '(' . ExpressionList ')'   (rule 54)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    ExpressionList	go to state 154
    Expression	go to state 125



state 117

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList . BEGIN BlockStatement END   (rule 86)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList . NADO Expression EndlList BEGIN BlockStatement END   (rule 88)

    BEGIN	shift, and go to state 155
    NADO	shift, and go to state 156
    ENDL	shift, and go to state 4



state 118

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList NADO Expression EndlList . BEGIN BlockStatement END   (rule 87)

    BEGIN	shift, and go to state 157
    ENDL	shift, and go to state 4



state 119

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList BEGIN . BlockStatement END   (rule 93)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 158
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 120

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO . Expression EndlList BEGIN BlockStatement END   (rule 94)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO . Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 96)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 159



state 121

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList NADO . Expression EndlList BEGIN BlockStatement END   (rule 95)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 160



state 122

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList . BEGIN BlockStatement END   (rule 89)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList . DANO Expression EndlList BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList . NADO Expression EndlList BEGIN BlockStatement END   (rule 91)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList . DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 92)

    BEGIN	shift, and go to state 161
    DANO	shift, and go to state 162
    NADO	shift, and go to state 163
    ENDL	shift, and go to state 4



state 123

    VarDeclaration  ->  ArrType ID '[' Expression ':' . Expression ']'   (rule 98)
    VarDeclaration  ->  ArrType ID '[' Expression ':' . Expression ',' Expression ':' Expression ']'   (rule 99)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 164



state 124

    Statement  ->  ID '(' ExpressionList . ')'   (rule 12)
    ExpressionList  ->  ExpressionList . ',' Expression   (rule 48)
    Expression  ->  ID '(' ExpressionList . ')'   (rule 54)

    ',' 	shift, and go to state 165
    ')' 	shift, and go to state 166



state 125

    ExpressionList  ->  Expression .   (rule 47)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 47 (ExpressionList)



state 126

    IfStatement  ->  IF Statement EndlList . THEN EndlList BlockStatement DONE   (rule 31)
    IfStatement  ->  IF Statement EndlList . THEN EndlList BlockStatement ELSE BlockStatement DONE   (rule 32)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    THEN	shift, and go to state 167



state 127

    WhileStatement  ->  CYCLE_BEGIN WHILE Expression . EndlList BlockStatement CYCLE_END   (rule 33)
    WhileStatement  ->  CYCLE_BEGIN WHILE Expression . EndlList BlockStatement CYCLE_END_IF Statement   (rule 34)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 168



state 128

    ForStatement  ->  CYCLE_BEGIN FOR ID . FROM Expression TO Expression EndlList BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR ID . FROM Expression TO Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 36)
    ForStatement  ->  CYCLE_BEGIN FOR ID . FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID . FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)

    FROM	shift, and go to state 169



state 129

    CycleStatement  ->  CYCLE_BEGIN EndlList BlockStatement . CYCLE_END   (rule 27)
    CycleStatement  ->  CYCLE_BEGIN EndlList BlockStatement . CYCLE_END_IF Statement   (rule 28)

    CYCLE_END	shift, and go to state 170
    CYCLE_END_IF	shift, and go to state 171



state 130

    TimesStatement  ->  CYCLE_BEGIN Expression TIMES . EndlList BlockStatement CYCLE_END   (rule 29)
    TimesStatement  ->  CYCLE_BEGIN Expression TIMES . EndlList BlockStatement CYCLE_END_IF Statement   (rule 30)

    ENDL	shift, and go to state 1

    EndlList	go to state 172



state 131

    SwitchCaseStatement  ->  SWITCH Expression EndlList . CaseList DONE   (rule 39)
    SwitchCaseStatement  ->  SWITCH Expression EndlList . CaseList ELSE Expression EndlList DONE   (rule 40)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    CASE	shift, and go to state 173

    CaseList	go to state 174



state 132

    StatementList  ->  StatementList EndlList Statement .   (rule 9)

    $default	reduce using rule 9 (StatementList)



state 133

    InputList  ->  InputList ',' ID .   (rule 23)

    $default	reduce using rule 23 (InputList)



state 134

    OutputList  ->  OutputList ',' NS .   (rule 26)

    $default	reduce using rule 26 (OutputList)



state 135

    OutputList  ->  OutputList ',' Expression .   (rule 25)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 25 (OutputList)



state 136

    Statement  ->  Expression ASSIGN Expression .   (rule 14)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 14 (Statement)



state 137

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression OR Expression .   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 64 (Expression)



state 138

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression AND Expression .   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 63 (Expression)



state 139

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression '=' Expression .   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 68 (Expression)



state 140

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression NOT_EQUAL Expression .   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 67 (Expression)



state 141

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression '>' Expression .   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 61 (Expression)



state 142

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression '<' Expression .   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 60 (Expression)



state 143

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression GREATER_EQUAL Expression .   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 65 (Expression)



state 144

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression LESS_EQUAL Expression .   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 66 (Expression)



state 145

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression '+' Expression .   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 56 (Expression)



state 146

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression '-' Expression .   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 57 (Expression)



state 147

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression '*' Expression .   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 58 (Expression)



state 148

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression '/' Expression .   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 59 (Expression)



state 149

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression POW Expression .   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    '[' 	shift, and go to state 113

    $default	reduce using rule 62 (Expression)



state 150

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression '[' Expression . ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    Expression  ->  Expression '[' Expression . ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    ':' 	shift, and go to state 175
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113
    ']' 	shift, and go to state 176



state 151

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    Var  ->  VarDeclaration ASSIGN Expression .   (rule 101)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 101 (Var)



state 152

    VarList  ->  VarList ',' EndlOpt . Var   (rule 103)
    VarList  ->  VarList ',' EndlOpt . ID   (rule 104)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 177

    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 178



state 153

    EndlOpt  ->  EndlList .   (rule 44)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4

    $default	reduce using rule 44 (EndlOpt)



state 154

    ExpressionList  ->  ExpressionList . ',' Expression   (rule 48)
    Expression  ->  ID '(' ExpressionList . ')'   (rule 54)

    ',' 	shift, and go to state 165
    ')' 	shift, and go to state 179



state 155

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList BEGIN . BlockStatement END   (rule 86)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 180
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 156

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList NADO . Expression EndlList BEGIN BlockStatement END   (rule 88)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 181



state 157

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList NADO Expression EndlList BEGIN . BlockStatement END   (rule 87)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 182
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 158

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList BEGIN BlockStatement . END   (rule 93)

    END 	shift, and go to state 183



state 159

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression . EndlList BEGIN BlockStatement END   (rule 94)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression . EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 96)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 184



state 160

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList NADO Expression . EndlList BEGIN BlockStatement END   (rule 95)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 185



state 161

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList BEGIN . BlockStatement END   (rule 89)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 186
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 162

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO . Expression EndlList BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO . Expression EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 92)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 187



state 163

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList NADO . Expression EndlList BEGIN BlockStatement END   (rule 91)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 188



state 164

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression . ']'   (rule 98)
    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression . ',' Expression ':' Expression ']'   (rule 99)

    ',' 	shift, and go to state 189
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113
    ']' 	shift, and go to state 190



state 165

    ExpressionList  ->  ExpressionList ',' . Expression   (rule 48)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 191



state 166

    Statement  ->  ID '(' ExpressionList ')' .   (rule 12)
    Expression  ->  ID '(' ExpressionList ')' .   (rule 54)

    ENDL	reduce using rule 12 (Statement)
    $default	reduce using rule 54 (Expression)



state 167

    IfStatement  ->  IF Statement EndlList THEN . EndlList BlockStatement DONE   (rule 31)
    IfStatement  ->  IF Statement EndlList THEN . EndlList BlockStatement ELSE BlockStatement DONE   (rule 32)

    ENDL	shift, and go to state 1

    EndlList	go to state 192



state 168

    WhileStatement  ->  CYCLE_BEGIN WHILE Expression EndlList . BlockStatement CYCLE_END   (rule 33)
    WhileStatement  ->  CYCLE_BEGIN WHILE Expression EndlList . BlockStatement CYCLE_END_IF Statement   (rule 34)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 193
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 169

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM . Expression TO Expression EndlList BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM . Expression TO Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 36)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM . Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM . Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 194



state 170

    CycleStatement  ->  CYCLE_BEGIN EndlList BlockStatement CYCLE_END .   (rule 27)

    $default	reduce using rule 27 (CycleStatement)



state 171

    CycleStatement  ->  CYCLE_BEGIN EndlList BlockStatement CYCLE_END_IF . Statement   (rule 28)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Statement	go to state 195
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 172

    TimesStatement  ->  CYCLE_BEGIN Expression TIMES EndlList . BlockStatement CYCLE_END   (rule 29)
    TimesStatement  ->  CYCLE_BEGIN Expression TIMES EndlList . BlockStatement CYCLE_END_IF Statement   (rule 30)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 196
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 173

    CaseList  ->  CASE . Expression ':' EndlList BlockStatement   (rule 41)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 197



state 174

    SwitchCaseStatement  ->  SWITCH Expression EndlList CaseList . DONE   (rule 39)
    SwitchCaseStatement  ->  SWITCH Expression EndlList CaseList . ELSE Expression EndlList DONE   (rule 40)
    CaseList  ->  CaseList . CASE Expression ':' EndlList BlockStatement   (rule 42)

    ELSE	shift, and go to state 198
    DONE	shift, and go to state 199
    CASE	shift, and go to state 200



state 175

    Expression  ->  Expression '[' Expression ':' . Expression ']'   (rule 72)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 201



state 176

    Expression  ->  Expression '[' Expression ']' .   (rule 71)

    $default	reduce using rule 71 (Expression)



state 177

    VarList  ->  VarList ',' EndlOpt ID .   (rule 104)

    $default	reduce using rule 104 (VarList)



state 178

    VarList  ->  VarList ',' EndlOpt Var .   (rule 103)

    $default	reduce using rule 103 (VarList)



state 179

    Expression  ->  ID '(' ExpressionList ')' .   (rule 54)

    $default	reduce using rule 54 (Expression)



state 180

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement . END   (rule 86)

    END 	shift, and go to state 202



state 181

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList NADO Expression . EndlList BEGIN BlockStatement END   (rule 88)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 203



state 182

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement . END   (rule 87)

    END 	shift, and go to state 204



state 183

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList BEGIN BlockStatement END .   (rule 93)

    $default	reduce using rule 93 (AlgorithmProcedureImplementation)



state 184

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList . BEGIN BlockStatement END   (rule 94)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList . NADO Expression EndlList BEGIN BlockStatement END   (rule 96)

    BEGIN	shift, and go to state 205
    NADO	shift, and go to state 206
    ENDL	shift, and go to state 4



state 185

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList NADO Expression EndlList . BEGIN BlockStatement END   (rule 95)

    BEGIN	shift, and go to state 207
    ENDL	shift, and go to state 4



state 186

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList BEGIN BlockStatement . END   (rule 89)

    END 	shift, and go to state 208



state 187

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression . EndlList BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression . EndlList NADO Expression EndlList BEGIN BlockStatement END   (rule 92)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 209



state 188

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList NADO Expression . EndlList BEGIN BlockStatement END   (rule 91)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 210



state 189

    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression ',' . Expression ':' Expression ']'   (rule 99)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 211



state 190

    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression ']' .   (rule 98)

    $default	reduce using rule 98 (VarDeclaration)



state 191

    ExpressionList  ->  ExpressionList ',' Expression .   (rule 48)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    $default	reduce using rule 48 (ExpressionList)



state 192

    IfStatement  ->  IF Statement EndlList THEN EndlList . BlockStatement DONE   (rule 31)
    IfStatement  ->  IF Statement EndlList THEN EndlList . BlockStatement ELSE BlockStatement DONE   (rule 32)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 212
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 193

    WhileStatement  ->  CYCLE_BEGIN WHILE Expression EndlList BlockStatement . CYCLE_END   (rule 33)
    WhileStatement  ->  CYCLE_BEGIN WHILE Expression EndlList BlockStatement . CYCLE_END_IF Statement   (rule 34)

    CYCLE_END	shift, and go to state 213
    CYCLE_END_IF	shift, and go to state 214



state 194

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression . TO Expression EndlList BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression . TO Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 36)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression . TO Expression STEP Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression . TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    TO  	shift, and go to state 215
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113



state 195

    CycleStatement  ->  CYCLE_BEGIN EndlList BlockStatement CYCLE_END_IF Statement .   (rule 28)

    $default	reduce using rule 28 (CycleStatement)



state 196

    TimesStatement  ->  CYCLE_BEGIN Expression TIMES EndlList BlockStatement . CYCLE_END   (rule 29)
    TimesStatement  ->  CYCLE_BEGIN Expression TIMES EndlList BlockStatement . CYCLE_END_IF Statement   (rule 30)

    CYCLE_END	shift, and go to state 216
    CYCLE_END_IF	shift, and go to state 217



state 197

    CaseList  ->  CASE Expression . ':' EndlList BlockStatement   (rule 41)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    ':' 	shift, and go to state 218
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113



state 198

    SwitchCaseStatement  ->  SWITCH Expression EndlList CaseList ELSE . Expression EndlList DONE   (rule 40)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 219



state 199

    SwitchCaseStatement  ->  SWITCH Expression EndlList CaseList DONE .   (rule 39)

    $default	reduce using rule 39 (SwitchCaseStatement)



state 200

    CaseList  ->  CaseList CASE . Expression ':' EndlList BlockStatement   (rule 42)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 220



state 201

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    Expression  ->  Expression '[' Expression ':' Expression . ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113
    ']' 	shift, and go to state 221



state 202

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END .   (rule 86)

    $default	reduce using rule 86 (AlgorithmImplementation)



state 203

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList . BEGIN BlockStatement END   (rule 88)

    BEGIN	shift, and go to state 222
    ENDL	shift, and go to state 4



state 204

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END .   (rule 87)

    $default	reduce using rule 87 (AlgorithmImplementation)



state 205

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN . BlockStatement END   (rule 94)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 223
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 206

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList NADO . Expression EndlList BEGIN BlockStatement END   (rule 96)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 224



state 207

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN . BlockStatement END   (rule 95)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 225
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 208

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList BEGIN BlockStatement END .   (rule 89)

    $default	reduce using rule 89 (AlgorithmFunctionImplementation)



state 209

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList . BEGIN BlockStatement END   (rule 90)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList . NADO Expression EndlList BEGIN BlockStatement END   (rule 92)

    BEGIN	shift, and go to state 226
    NADO	shift, and go to state 227
    ENDL	shift, and go to state 4



state 210

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList NADO Expression EndlList . BEGIN BlockStatement END   (rule 91)

    BEGIN	shift, and go to state 228
    ENDL	shift, and go to state 4



state 211

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression ',' Expression . ':' Expression ']'   (rule 99)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    ':' 	shift, and go to state 229
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113



state 212

    IfStatement  ->  IF Statement EndlList THEN EndlList BlockStatement . DONE   (rule 31)
    IfStatement  ->  IF Statement EndlList THEN EndlList BlockStatement . ELSE BlockStatement DONE   (rule 32)

    ELSE	shift, and go to state 230
    DONE	shift, and go to state 231



state 213

    WhileStatement  ->  CYCLE_BEGIN WHILE Expression EndlList BlockStatement CYCLE_END .   (rule 33)

    $default	reduce using rule 33 (WhileStatement)



state 214

    WhileStatement  ->  CYCLE_BEGIN WHILE Expression EndlList BlockStatement CYCLE_END_IF . Statement   (rule 34)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Statement	go to state 232
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 215

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO . Expression EndlList BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO . Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 36)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO . Expression STEP Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO . Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 233



state 216

    TimesStatement  ->  CYCLE_BEGIN Expression TIMES EndlList BlockStatement CYCLE_END .   (rule 29)

    $default	reduce using rule 29 (TimesStatement)



state 217

    TimesStatement  ->  CYCLE_BEGIN Expression TIMES EndlList BlockStatement CYCLE_END_IF . Statement   (rule 30)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Statement	go to state 234
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 218

    CaseList  ->  CASE Expression ':' . EndlList BlockStatement   (rule 41)

    ENDL	shift, and go to state 1

    EndlList	go to state 235



state 219

    SwitchCaseStatement  ->  SWITCH Expression EndlList CaseList ELSE Expression . EndlList DONE   (rule 40)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 236



state 220

    CaseList  ->  CaseList CASE Expression . ':' EndlList BlockStatement   (rule 42)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    ':' 	shift, and go to state 237
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113



state 221

    Expression  ->  Expression '[' Expression ':' Expression ']' .   (rule 72)

    $default	reduce using rule 72 (Expression)



state 222

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN . BlockStatement END   (rule 88)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 238
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 223

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement . END   (rule 94)

    END 	shift, and go to state 239



state 224

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression . EndlList BEGIN BlockStatement END   (rule 96)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 240



state 225

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement . END   (rule 95)

    END 	shift, and go to state 241



state 226

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN . BlockStatement END   (rule 90)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 242
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 227

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO . Expression EndlList BEGIN BlockStatement END   (rule 92)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 243



state 228

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN . BlockStatement END   (rule 91)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 244
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 229

    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression ',' Expression ':' . Expression ']'   (rule 99)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 245



state 230

    IfStatement  ->  IF Statement EndlList THEN EndlList BlockStatement ELSE . BlockStatement DONE   (rule 32)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 246
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 231

    IfStatement  ->  IF Statement EndlList THEN EndlList BlockStatement DONE .   (rule 31)

    $default	reduce using rule 31 (IfStatement)



state 232

    WhileStatement  ->  CYCLE_BEGIN WHILE Expression EndlList BlockStatement CYCLE_END_IF Statement .   (rule 34)

    $default	reduce using rule 34 (WhileStatement)



state 233

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression . EndlList BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression . EndlList BlockStatement CYCLE_END_IF Statement   (rule 36)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression . STEP Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression . STEP Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    ENDL	shift, and go to state 1
    STEP	shift, and go to state 247
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 248



state 234

    TimesStatement  ->  CYCLE_BEGIN Expression TIMES EndlList BlockStatement CYCLE_END_IF Statement .   (rule 30)

    $default	reduce using rule 30 (TimesStatement)



state 235

    CaseList  ->  CASE Expression ':' EndlList . BlockStatement   (rule 41)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 249
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 236

    SwitchCaseStatement  ->  SWITCH Expression EndlList CaseList ELSE Expression EndlList . DONE   (rule 40)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    DONE	shift, and go to state 250



state 237

    CaseList  ->  CaseList CASE Expression ':' . EndlList BlockStatement   (rule 42)

    ENDL	shift, and go to state 1

    EndlList	go to state 251



state 238

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement . END   (rule 88)

    END 	shift, and go to state 252



state 239

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END .   (rule 94)

    $default	reduce using rule 94 (AlgorithmProcedureImplementation)



state 240

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList . BEGIN BlockStatement END   (rule 96)

    BEGIN	shift, and go to state 253
    ENDL	shift, and go to state 4



state 241

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END .   (rule 95)

    $default	reduce using rule 95 (AlgorithmProcedureImplementation)



state 242

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement . END   (rule 90)

    END 	shift, and go to state 254



state 243

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression . EndlList BEGIN BlockStatement END   (rule 92)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 255



state 244

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement . END   (rule 91)

    END 	shift, and go to state 256



state 245

    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)
    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression ',' Expression ':' Expression . ']'   (rule 99)

    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113
    ']' 	shift, and go to state 257



state 246

    IfStatement  ->  IF Statement EndlList THEN EndlList BlockStatement ELSE BlockStatement . DONE   (rule 32)

    DONE	shift, and go to state 258



state 247

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP . Expression EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP . Expression EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)

    ID  	shift, and go to state 77
    NOT 	shift, and go to state 51
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Expression	go to state 259



state 248

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList . BlockStatement CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList . BlockStatement CYCLE_END_IF Statement   (rule 36)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 260
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 249

    CaseList  ->  CASE Expression ':' EndlList BlockStatement .   (rule 41)

    $default	reduce using rule 41 (CaseList)



state 250

    SwitchCaseStatement  ->  SWITCH Expression EndlList CaseList ELSE Expression EndlList DONE .   (rule 40)

    $default	reduce using rule 40 (SwitchCaseStatement)



state 251

    CaseList  ->  CaseList CASE Expression ':' EndlList . BlockStatement   (rule 42)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 261
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 252

    AlgorithmImplementation  ->  ALG ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END .   (rule 88)

    $default	reduce using rule 88 (AlgorithmImplementation)



state 253

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN . BlockStatement END   (rule 96)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 262
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 254

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList BEGIN BlockStatement END .   (rule 90)

    $default	reduce using rule 90 (AlgorithmFunctionImplementation)



state 255

    EndlList  ->  EndlList . ENDL   (rule 46)
    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList . BEGIN BlockStatement END   (rule 92)

    BEGIN	shift, and go to state 263
    ENDL	shift, and go to state 4



state 256

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList NADO Expression EndlList BEGIN BlockStatement END .   (rule 91)

    $default	reduce using rule 91 (AlgorithmFunctionImplementation)



state 257

    VarDeclaration  ->  ArrType ID '[' Expression ':' Expression ',' Expression ':' Expression ']' .   (rule 99)

    $default	reduce using rule 99 (VarDeclaration)



state 258

    IfStatement  ->  IF Statement EndlList THEN EndlList BlockStatement ELSE BlockStatement DONE .   (rule 32)

    $default	reduce using rule 32 (IfStatement)



state 259

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression . EndlList BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression . EndlList BlockStatement CYCLE_END_IF Statement   (rule 38)
    Expression  ->  Expression . '+' Expression   (rule 56)
    Expression  ->  Expression . '-' Expression   (rule 57)
    Expression  ->  Expression . '*' Expression   (rule 58)
    Expression  ->  Expression . '/' Expression   (rule 59)
    Expression  ->  Expression . '<' Expression   (rule 60)
    Expression  ->  Expression . '>' Expression   (rule 61)
    Expression  ->  Expression . POW Expression   (rule 62)
    Expression  ->  Expression . AND Expression   (rule 63)
    Expression  ->  Expression . OR Expression   (rule 64)
    Expression  ->  Expression . GREATER_EQUAL Expression   (rule 65)
    Expression  ->  Expression . LESS_EQUAL Expression   (rule 66)
    Expression  ->  Expression . NOT_EQUAL Expression   (rule 67)
    Expression  ->  Expression . '=' Expression   (rule 68)
    Expression  ->  Expression . '[' Expression ']'   (rule 71)
    Expression  ->  Expression . '[' Expression ':' Expression ']'   (rule 72)

    ENDL	shift, and go to state 1
    OR  	shift, and go to state 100
    AND 	shift, and go to state 101
    '=' 	shift, and go to state 102
    NOT_EQUAL	shift, and go to state 103
    '>' 	shift, and go to state 104
    '<' 	shift, and go to state 105
    GREATER_EQUAL	shift, and go to state 106
    LESS_EQUAL	shift, and go to state 107
    '+' 	shift, and go to state 108
    '-' 	shift, and go to state 109
    '*' 	shift, and go to state 110
    '/' 	shift, and go to state 111
    POW 	shift, and go to state 112
    '[' 	shift, and go to state 113

    EndlList	go to state 264



state 260

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList BlockStatement . CYCLE_END   (rule 35)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList BlockStatement . CYCLE_END_IF Statement   (rule 36)

    CYCLE_END	shift, and go to state 265
    CYCLE_END_IF	shift, and go to state 266



state 261

    CaseList  ->  CaseList CASE Expression ':' EndlList BlockStatement .   (rule 42)

    $default	reduce using rule 42 (CaseList)



state 262

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement . END   (rule 96)

    END 	shift, and go to state 267



state 263

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN . BlockStatement END   (rule 92)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 268
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 264

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList . BlockStatement CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList . BlockStatement CYCLE_END_IF Statement   (rule 38)
    EndlList  ->  EndlList . ENDL   (rule 46)

    ENDL	shift, and go to state 4
    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    $default	reduce using rule 6 (BlockStatement)

    BlockStatement	go to state 269
    StatementList	go to state 63
    Statement	go to state 64
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 265

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END .   (rule 35)

    $default	reduce using rule 35 (ForStatement)



state 266

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END_IF . Statement   (rule 36)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Statement	go to state 270
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 267

    AlgorithmProcedureImplementation  ->  ALG ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END .   (rule 96)

    $default	reduce using rule 96 (AlgorithmProcedureImplementation)



state 268

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement . END   (rule 92)

    END 	shift, and go to state 271



state 269

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement . CYCLE_END   (rule 37)
    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement . CYCLE_END_IF Statement   (rule 38)

    CYCLE_END	shift, and go to state 272
    CYCLE_END_IF	shift, and go to state 273



state 270

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression EndlList BlockStatement CYCLE_END_IF Statement .   (rule 36)

    $default	reduce using rule 36 (ForStatement)



state 271

    AlgorithmFunctionImplementation  ->  ALG Type ID ParamDeclarationList EndlList DANO Expression EndlList NADO Expression EndlList BEGIN BlockStatement END .   (rule 92)

    $default	reduce using rule 92 (AlgorithmFunctionImplementation)



state 272

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END .   (rule 37)

    $default	reduce using rule 37 (ForStatement)



state 273

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF . Statement   (rule 38)

    INT 	shift, and go to state 16
    FLOAT	shift, and go to state 17
    BOOL	shift, and go to state 18
    CHAR	shift, and go to state 19
    STRING	shift, and go to state 20
    INTTAB	shift, and go to state 21
    FLOATTAB	shift, and go to state 22
    BOOLTAB	shift, and go to state 23
    CHARTAB	shift, and go to state 24
    STRINGTAB	shift, and go to state 25
    ID  	shift, and go to state 48
    INPUT	shift, and go to state 49
    OUTPUT	shift, and go to state 50
    NOT 	shift, and go to state 51
    IF  	shift, and go to state 52
    CYCLE_BEGIN	shift, and go to state 53
    SWITCH	shift, and go to state 54
    INT_LITERAL	shift, and go to state 55
    FLOAT_LITERAL	shift, and go to state 56
    CHAR_LITERAL	shift, and go to state 57
    STRING_LITERAL	shift, and go to state 58
    BOOL_LITERAL	shift, and go to state 59
    '+' 	shift, and go to state 60
    '-' 	shift, and go to state 61

    Statement	go to state 274
    InputList	go to state 65
    OutputList	go to state 66
    CycleStatement	go to state 67
    TimesStatement	go to state 68
    IfStatement	go to state 69
    WhileStatement	go to state 70
    ForStatement	go to state 71
    SwitchCaseStatement	go to state 72
    Expression	go to state 73
    Type	go to state 26
    ArrType	go to state 27
    VarDeclaration	go to state 74
    Var 	go to state 75
    VarList	go to state 76



state 274

    ForStatement  ->  CYCLE_BEGIN FOR ID FROM Expression TO Expression STEP Expression EndlList BlockStatement CYCLE_END_IF Statement .   (rule 38)

    $default	reduce using rule 38 (ForStatement)



state 275

    $   	go to state 276



state 276

    $   	go to state 277



state 277

    $default	accept
